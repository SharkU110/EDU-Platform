<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iss.edu.dao.CourseDao">

    <resultMap id="CourseMap" type="Course">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="introduction" column="introduction"/>
        <result property="classHour" column="class_hour"/>
        <result property="isPrivate" column="is_private"/>
        <result property="cover" column="cover"/>
        <result property="createTime" column="create_time"/>
        <association property="teacher" javaType="User">
            <id property="id" column="user_id"/>
            <result property="nickname" column="nickname"/>
        </association>
        <collection property="materials" ofType="TeachingMaterial">
            <id property="id" column="m_id"/>
            <result property="name" column="m_name"/>
            <result property="createTime" column="m_create_time"/>
        </collection>
    </resultMap>

    <select id="getPage" resultMap="CourseMap">
        select c.id, c.name, c.introduction, c.class_hour, c.is_private, c.cover, c.create_time, u.id user_id, u.nickname
        from course c left join user u on u.id = c.user
        <where>
            <if test="queryValue != null and queryValue != ''">
                c.name like '%${queryValue}%'
            </if>
            and c.is_active = 1
        </where>
        limit #{start}, #{pageSize}
    </select>

    <select id="getCourse" parameterType="java.lang.Integer"  resultMap="CourseMap">
        select
            c.id, c.name, c.introduction, c.class_hour, c.is_private, c.cover, c.create_time, u.id user_id, u.nickname,
            m.id as m_id, m.name as m_name, m.create_time as m_create_time
        from
            course c
            left join user u on u.id = c.user
            left join material m on c.id = m.course_id
        where
            c.id = #{id}
    </select>

    <select id="getCount" resultType="java.lang.Integer">
        select count(*) from course
        <where>
            is_active = 1
            <if test="queryValue != null or queryValue != ''">
                and name like '%${queryValue}%'
            </if>
        </where>
    </select>

    <insert id="insertCourse" parameterType="Course" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into course (name, user, introduction, class_hour, is_private, create_time, update_time, cover) values (#{name}, #{teacher.id}, #{introduction}, #{classHour}, #{isPrivate}, now(), now(), #{cover})
    </insert>

    <update id="updateCourse" parameterType="Course">
        update course set name = #{name}, introduction = #{introduction}, class_hour = #{classHour}, is_private = #{isPrivate}, user = #{teacher.id}, update_time = now() where id = #{id}
    </update>

    <update id="delete">
        update course set is_active = 0 where id = #{id}
    </update>

    <delete id="deletes">
        update course set is_active = 0 where id in
        <foreach collection="ids" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
    </delete>

    <select id="getTransfer" resultType="java.util.Map">
        select id as `key`, name as label, name as query from course
    </select>

    <select id="getCoursesByClassId" resultType="int">
        select course_id from class_course where class_id = #{classId}
    </select>

</mapper>